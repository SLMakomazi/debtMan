{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wipro\\\\CascadeProjects\\\\debtMan\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const initializeAuth = async () => {\n      try {\n        const storedUser = localStorage.getItem('user');\n        if (storedUser) {\n          const userData = JSON.parse(storedUser);\n          // Verify token is still valid by making an API call\n          await api.get('/auth/me');\n          setUser(userData);\n          api.defaults.headers.Authorization = `Bearer ${userData.token}`;\n        }\n      } catch (error) {\n        var _error$response;\n        // If token is invalid, clear the stored user\n        if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n          localStorage.removeItem('user');\n          delete api.defaults.headers.Authorization;\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    initializeAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      const response = await api.post('/auth/login', {\n        email,\n        password\n      });\n      const {\n        user,\n        token\n      } = response.data;\n\n      // Store user data with token\n      const userData = {\n        ...user,\n        token\n      };\n      localStorage.setItem('user', JSON.stringify(userData));\n\n      // Set auth header for future requests\n      api.defaults.headers.Authorization = `Bearer ${token}`;\n\n      // Update state\n      setUser(userData);\n      toast.success('Login successful!');\n      return true;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Login failed. Please check your credentials.';\n      toast.error(errorMessage);\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    try {\n      // Clear user data\n      localStorage.removeItem('user');\n      delete api.defaults.headers.Authorization;\n      setUser(null);\n\n      // Redirect to login page\n      navigate('/login');\n\n      // Show success message\n      toast.success('You have been logged out successfully.');\n    } catch (error) {\n      console.error('Error during logout:', error);\n      toast.error('An error occurred during logout.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      logout\n    },\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"lk6viekuCMMpYORkLYLEq0Wsfds=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return React.useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useNavigate","toast","api","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","navigate","initializeAuth","storedUser","localStorage","getItem","userData","JSON","parse","get","defaults","headers","Authorization","token","error","_error$response","response","status","removeItem","login","email","password","post","data","setItem","stringify","success","_error$response2","_error$response2$data","errorMessage","message","logout","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","useContext","$RefreshReg$"],"sources":["C:/Users/Wipro/CascadeProjects/debtMan/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport api from '../services/api';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const initializeAuth = async () => {\n      try {\n        const storedUser = localStorage.getItem('user');\n        if (storedUser) {\n          const userData = JSON.parse(storedUser);\n          // Verify token is still valid by making an API call\n          await api.get('/auth/me');\n          setUser(userData);\n          api.defaults.headers.Authorization = `Bearer ${userData.token}`;\n        }\n      } catch (error) {\n        // If token is invalid, clear the stored user\n        if (error.response?.status === 401) {\n          localStorage.removeItem('user');\n          delete api.defaults.headers.Authorization;\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    initializeAuth();\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      const response = await api.post('/auth/login', { email, password });\n      const { user, token } = response.data;\n      \n      // Store user data with token\n      const userData = { ...user, token };\n      localStorage.setItem('user', JSON.stringify(userData));\n      \n      // Set auth header for future requests\n      api.defaults.headers.Authorization = `Bearer ${token}`;\n      \n      // Update state\n      setUser(userData);\n      \n      toast.success('Login successful!');\n      return true;\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Login failed. Please check your credentials.';\n      toast.error(errorMessage);\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const logout = () => {\n    try {\n      // Clear user data\n      localStorage.removeItem('user');\n      delete api.defaults.headers.Authorization;\n      setUser(null);\n      \n      // Redirect to login page\n      navigate('/login');\n      \n      // Show success message\n      toast.success('You have been logged out successfully.');\n    } catch (error) {\n      console.error('Error during logout:', error);\n      toast.error('An error occurred during logout.');\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, loading, login, logout }}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  return React.useContext(AuthContext);\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAOC,GAAG,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,OAAO,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMS,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMe,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMe,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;QAC/C,IAAIF,UAAU,EAAE;UACd,MAAMG,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC;UACvC;UACA,MAAMb,GAAG,CAACmB,GAAG,CAAC,UAAU,CAAC;UACzBX,OAAO,CAACQ,QAAQ,CAAC;UACjBhB,GAAG,CAACoB,QAAQ,CAACC,OAAO,CAACC,aAAa,GAAG,UAAUN,QAAQ,CAACO,KAAK,EAAE;QACjE;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QAAA,IAAAC,eAAA;QACd;QACA,IAAI,EAAAA,eAAA,GAAAD,KAAK,CAACE,QAAQ,cAAAD,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,EAAE;UAClCb,YAAY,CAACc,UAAU,CAAC,MAAM,CAAC;UAC/B,OAAO5B,GAAG,CAACoB,QAAQ,CAACC,OAAO,CAACC,aAAa;QAC3C;MACF,CAAC,SAAS;QACRZ,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDE,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMiB,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACFrB,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMgB,QAAQ,GAAG,MAAM1B,GAAG,CAACgC,IAAI,CAAC,aAAa,EAAE;QAAEF,KAAK;QAAEC;MAAS,CAAC,CAAC;MACnE,MAAM;QAAExB,IAAI;QAAEgB;MAAM,CAAC,GAAGG,QAAQ,CAACO,IAAI;;MAErC;MACA,MAAMjB,QAAQ,GAAG;QAAE,GAAGT,IAAI;QAAEgB;MAAM,CAAC;MACnCT,YAAY,CAACoB,OAAO,CAAC,MAAM,EAAEjB,IAAI,CAACkB,SAAS,CAACnB,QAAQ,CAAC,CAAC;;MAEtD;MACAhB,GAAG,CAACoB,QAAQ,CAACC,OAAO,CAACC,aAAa,GAAG,UAAUC,KAAK,EAAE;;MAEtD;MACAf,OAAO,CAACQ,QAAQ,CAAC;MAEjBjB,KAAK,CAACqC,OAAO,CAAC,mBAAmB,CAAC;MAClC,OAAO,IAAI;IACb,CAAC,CAAC,OAAOZ,KAAK,EAAE;MAAA,IAAAa,gBAAA,EAAAC,qBAAA;MACd,MAAMC,YAAY,GAAG,EAAAF,gBAAA,GAAAb,KAAK,CAACE,QAAQ,cAAAW,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBJ,IAAI,cAAAK,qBAAA,uBAApBA,qBAAA,CAAsBE,OAAO,KAAI,8CAA8C;MACpGzC,KAAK,CAACyB,KAAK,CAACe,YAAY,CAAC;MACzB,OAAO,KAAK;IACd,CAAC,SAAS;MACR7B,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAM+B,MAAM,GAAGA,CAAA,KAAM;IACnB,IAAI;MACF;MACA3B,YAAY,CAACc,UAAU,CAAC,MAAM,CAAC;MAC/B,OAAO5B,GAAG,CAACoB,QAAQ,CAACC,OAAO,CAACC,aAAa;MACzCd,OAAO,CAAC,IAAI,CAAC;;MAEb;MACAG,QAAQ,CAAC,QAAQ,CAAC;;MAElB;MACAZ,KAAK,CAACqC,OAAO,CAAC,wCAAwC,CAAC;IACzD,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACdkB,OAAO,CAAClB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CzB,KAAK,CAACyB,KAAK,CAAC,kCAAkC,CAAC;IACjD;EACF,CAAC;EAED,oBACEtB,OAAA,CAACC,WAAW,CAACwC,QAAQ;IAACC,KAAK,EAAE;MAAErC,IAAI;MAAEE,OAAO;MAAEoB,KAAK;MAAEY;IAAO,CAAE;IAAApC,QAAA,EAC3D,CAACI,OAAO,IAAIJ;EAAQ;IAAAwC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE3B,CAAC;AAAC1C,EAAA,CAhFWF,YAAY;EAAA,QAGNN,WAAW;AAAA;AAAAmD,EAAA,GAHjB7C,YAAY;AAkFzB,OAAO,MAAM8C,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,OAAOzD,KAAK,CAAC0D,UAAU,CAACjD,WAAW,CAAC;AACtC,CAAC;AAACgD,GAAA,CAFWD,OAAO;AAAA,IAAAD,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}