{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wipro\\\\CascadeProjects\\\\debtMan\\\\frontend\\\\src\\\\components\\\\PrivateRoute\\\\PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthContext';\nimport Loader from '../Loader/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    user,\n    loading\n  } = useAuth();\n  const location = useLocation();\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {\n      fullPage: true,\n      message: \"Checking authentication...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n  if (!user) {\n    // Redirect to the login page, but save the current location they were trying to go to\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(PrivateRoute, \"zPafkKLdz6KrRvMe2id3iDpNU34=\", false, function () {\n  return [useAuth, useLocation];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","useLocation","useAuth","Loader","jsxDEV","_jsxDEV","PrivateRoute","children","_s","user","loading","location","fullPage","message","fileName","_jsxFileName","lineNumber","columnNumber","to","state","from","replace","_c","$RefreshReg$"],"sources":["C:/Users/Wipro/CascadeProjects/debtMan/frontend/src/components/PrivateRoute/PrivateRoute.js"],"sourcesContent":["import React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthContext';\nimport Loader from '../Loader/Loader';\n\nconst PrivateRoute = ({ children }) => {\n  const { user, loading } = useAuth();\n  const location = useLocation();\n\n  if (loading) {\n    return <Loader fullPage message=\"Checking authentication...\" />;\n  }\n\n  if (!user) {\n    // Redirect to the login page, but save the current location they were trying to go to\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n\n  return children;\n};\n\nexport default PrivateRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,OAAO,QAAQ,2BAA2B;AACnD,OAAOC,MAAM,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGR,OAAO,CAAC,CAAC;EACnC,MAAMS,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,IAAIS,OAAO,EAAE;IACX,oBAAOL,OAAA,CAACF,MAAM;MAACS,QAAQ;MAACC,OAAO,EAAC;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjE;EAEA,IAAI,CAACR,IAAI,EAAE;IACT;IACA,oBAAOJ,OAAA,CAACL,QAAQ;MAACkB,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAET;MAAS,CAAE;MAACU,OAAO;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpE;EAEA,OAAOV,QAAQ;AACjB,CAAC;AAACC,EAAA,CAdIF,YAAY;EAAA,QACUJ,OAAO,EAChBD,WAAW;AAAA;AAAAqB,EAAA,GAFxBhB,YAAY;AAgBlB,eAAeA,YAAY;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}